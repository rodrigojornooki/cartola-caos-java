# Production Configuration
server.port=${SERVER_PORT:8080}

# Database Configuration - using environment variables
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/cartola_db}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# Swagger/OpenAPI Configuration
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# External API Configuration
cartola.token=${CARTOLA_TOKEN:your-token-here}

# Logging Configuration
logging.level.root=INFO
logging.level.com.cartola.backend=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN

# Actuator Configuration for Health Checks
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.health.db.enabled=true

# CORS Configuration
spring.web.cors.allowed-origins=${ALLOWED_ORIGINS:*}
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true

# Cache Configuration
spring.cache.type=simple